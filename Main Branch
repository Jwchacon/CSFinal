

var level = 0;
var lives=3;
var numLogs = 75;
var currentScene = 0; //0=splash screen, 1=game
var logSpeed=3;
//Boat object class
var Boat = function(x, y) {  //boat constructor
    this.x = x;
    this.y = y;
    this.logs = 0; //score
};

Boat.prototype.draw = function() {
    this.x = constrain(this.x, 10, 390);
   fill(59, 29, 29);//brown boat color
   rectMode(CORNER);
ellipse(this.x,this.y,17,18);//boat round piece
rect(this.x-9,this.y-1,18,24);//boat body
rect(this.x-2,this.y-15,4,15);//bow
fill(255, 255, 255);//flag white
rect(this.x-11,this.y+4,22,4);//flag front
rect(this.x-11,this.y+13,22,4);//flag back
fill(59, 29, 29);//brown boat color
rect(this.x-3,this.y+6,6,4);//mast front
rect(this.x-3,this.y+15,6,4);//mast back
};

Boat.prototype.left = function() {
    this.x -= 5; //move boat left
};

Boat.prototype.right = function() {
    this.x += 5; //move boat right
};

Boat.prototype.checkForLogGrab = function(log) {
    // Check if the log is within the boundaries of the boat
    if (log.x > this.x && log.x < this.x + 18 &&
        log.y > this.y - 1 && log.y < this.y + 24) {
        log.x = -400;//sends log offscreen
        lives--;
    }
};

var Log = function(x, y) {
    this.x = x;
    this.y = y;
};

Log.prototype.draw = function() {
    rectMode(CENTER);
     fill(66, 42, 0);
    rect(this.x + 2, this.y + 2, 30, 10);
    ellipse(this.x + 18, this.y + 2, 10, 10);
    ellipse(this.x - 12, this.y + 2, 10, 10);
};
var Button = function(config) {
    this.x = config.x || 0;
    this.y = config.y || 0;
    this.width = config.width || 50;
    this.height = config.height || 50;
    this.label = config.label || "";
    this.color = config.color || (200,200,200);
};
Button.prototype.draw = function() {
    fill(this.color);
    rect(this.x, this.y, this.width, this.height, 5);
    fill(0, 0, 0);
    textSize(19);
    textAlign(LEFT, TOP);
    text(this.label, this.x+10, this.y+this.height/4);
};
Button.prototype.isMouseInside = function() {
    return mouseX > this.x &&
           mouseX < (this.x + this.width) &&
           mouseY > this.y &&
           mouseY < (this.y + this.height);
};

var logs = [];
for (var i = 0; i < numLogs; i++) {  //place 100 logs in array,100 pixels apart, randoom y
    logs.push(new Log(random(0,400),i*numLogs-6000)); //call log constructor
} 
var drawScene1 =function(){
background(158, 158, 158);
fill(46, 230, 55);
textFont(1,40);
text("Log Rush",110,60);
fill(26, 157, 201);
rect(148,146,100,100);
fill(46, 230, 55);
textFont(1,11);
text("USE THE Z AND X KEYS TO NAVIGATE YOUR BOAT AROUND THE LOGS",7,116);
text("A GAME BY JUSTIN CHACON AND ANGEL CASTANO",65,330);
var sboat = new Boat(200,211);
var log  = new Log(222,187);
var log2  = new Log(170,155);
log.draw();
log2.draw();
sboat.draw();
textFont(1,15);
var btnStart = new Button({x: 150, y: 250, width:100, label: "  START"});
btnStart.draw();
mouseClicked = function() {
    if (btnStart.isMouseInside()) {
        currentScene=1;}
};
};
var boat = new Boat(200,350);
var drawScene2 = function() {
    
    // static
    background(26, 157, 201);
    fill(130, 79, 43);
    rectMode(CORNER);
var btnPause = new Button({x: 365, y: 365, width: 30, height: 30, label: "||"});
btnPause.draw();
var pausedGame=false;
mouseClicked = function() {//Pauses game
    if (btnPause.isMouseInside() && pausedGame===false) {
        noLoop(); pausedGame=true;}
    else if(btnPause.isMouseInside() && pausedGame===true) {
        loop(); pausedGame=false;}
};
if (keyIsPressed && key.toString() ==='z' ) { 
        boat.left();
    } 
if(keyIsPressed && key.toString() ==='x') {
        boat.right();
    }
    boat.draw();  
    for (var i = 0; i < logs.length; i++) {
        logs[i].draw(); //draw a log
        boat.checkForLogGrab(logs[i]);
        logs[i].y += logSpeed;//moves logs left
        if(lives===0){fill(255, 0, 0);textSize(40);
        text("Game Over",120,200); text("You Reached Level " + level, 10,235);
         noLoop();}//game over function
        if(logs[1].y>400){logSpeed+=3;level++;for (var i = 0; i < logs.length; i++){logs[i].y = i * numLogs - 6000;}
    }
    }
    textSize(18);
    fill(0, 0, 0);
    text("Lives: " + lives, 20, 10);
    text("Level: " + level, 20, 30);
    text("Speed: " + logSpeed, 20, 50);
    
  
};
draw = function() {
if(currentScene===0){drawScene1();}
else if(currentScene===1){drawScene2();}
};

